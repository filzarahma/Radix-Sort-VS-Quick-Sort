// Radix Sort in C++ Programming

#include <iostream>
using namespace std;

// Fungsi untuk mendapatkan elemen terbesar dari array
int getMax(int array[], int n) {
/*
    I.S. Terdefinisi array integer dengan banyak elemen n
    F.S. Fungsi akan mengembalikan elemen terbesar dari array
*/
  int max = array[0];
  for (int i = 1; i < n; i++)
    if (array[i] > max)
      max = array[i];
  return max;
}

// Menggunakan Counting Sort untuk mengurutkan elemen berdasarkan tempat penting
void countingSort(int array[], int size, int place) {
/*
    I.S. Terdefinisi sebuah array bertipe integer dengan ukuran size dan place sebagai tempat
    F.S. Array terurut secara ascending 
*/
  const int max = 10;
  int output[size];
  int count[max];

  for (int i = 0; i < max; ++i)
    count[i] = 0;

  // Menghitung jumlah elemen
  for (int i = 0; i < size; i++)
    count[(array[i] / place) % 10]++;

  // Menghitung jumlah kumulatif
  for (int i = 1; i < max; i++)
    count[i] += count[i - 1];

  // Menempatkan elemen dalam urutan yang diurutkan
  for (int i = size - 1; i >= 0; i--) {
    output[count[(array[i] / place) % 10] - 1] = array[i];
    count[(array[i] / place) % 10]--;
  }

  for (int i = 0; i < size; i++)
    array[i] = output[i];
}

// Procedure utama untuk mengimplentasikan radix sort
void radixsort(int array[], int size) {
/*
    I.S. terdefinisi sebuah array integer dengan ukuran size
    F.S. array integer berhasil terurut secara ascending
*/
  // Mendapatkan elemen maksimum
  int max = getMax(array, size);

  // Menerapkan pengurutan penghitungan untuk mengurutkan elemen berdasarkan nilai tempat.
  for (int place = 1; max / place > 0; place *= 10)
    countingSort(array, size, place);
}

// Menampilkan array
void printArray(int array[], int size) {
/*
    I.S. Terdefinisi sebuah array integer dengan ukuran size
    F.S. Array telah tercetak pada piranti
*/
  int i;
  for (i = 0; i < size; i++)
    cout << array[i] << " ";
  cout << endl;
}

// Main Program
int main() {
  int array[] = {121, 432, 564, 23, 1, 45, 788};
  int n = sizeof(array) / sizeof(array[0]);
  radixsort(array, n);
  printArray(array, n);
}
